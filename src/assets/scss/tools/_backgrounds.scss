//----------------------------------------------
//  bg-img-cover()
//  Background Image setup
//----------------------------------------------
@mixin bg-img($bg_size: cover, $bg_position: 50%){
  background-position: $bg_position;
  background-repeat: no-repeat;
  background-size: $bg_size;
}

//----------------------------------------------
//  bg-img-abs()
//  Absolutely positioned bg element
//  @requires (mixin) bg-img();
//----------------------------------------------
@mixin bg-img-abs($bg_size:cover) {
  z-index: 0;
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  overflow:hidden;
  @include bg-img($bg_size:cover);
}


@mixin bg-img-ratio($width, $height) {
  position: relative;
  @include bg-img(100%, top);
  &:after {
    content: '';
    display: block;
    padding-top:($height / $width) * 100%;
  }
}


//----------------------------------------------
//  bg-overlay()
//  Pseduo overlay element
//  @param: $bg_hex: [$color-dark] - hex value for rgba conversion
//  @param: $bg_opacity:[0.6] - alpha transparency level
//----------------------------------------------
@mixin bg-overlay($bg_hex: $color-grey-dark, $bg_opacity: 0.6) {
  overflow: hidden;
  &:after {
    content: '';
    z-index: 0;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: rgba($bg_hex, $bg_opacity);
  }
}

//----------------------------------------------
//  pseudo elements
//  Created common styles associated with pseudo
//  elements
//----------------------------------------------
@mixin pseudo_el($z:0) {
  content: '';
  z-index: $z;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  transition: opacity 0.3s ease-in-out;
}

//----------------------------------------------
//  Aspect Ratio
//  For preloading images to maintain height and as
//  during fade-in animation.
//  @param $width natural width of image
//  @param $height natual height of image
//----------------------------------------------
@mixin as_ratio_img($width, $height) {
  padding-bottom: ($height / $width) * 100%;
  position: relative;
  height: 0;

  & > img{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: auto;
    margin: 0 auto;
  }
}



@mixin as_ratio_pseudo($width, $height) {
  &::before {
    content: "";
    float: left;
    height: 0;
    padding-top: ($height / $width) * 100%;
  }
  &::after { /* to clear float */
    content: "";
    display: table;
    clear: both;
  }
}
